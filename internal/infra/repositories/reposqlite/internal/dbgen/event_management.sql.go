// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: event_management.sql

package dbgen

import (
	"context"
	"time"
)

const SaveEvent = `-- name: SaveEvent :one
INSERT INTO olympic_events (event_name, discipline_name, phase, gender, start_at, end_at, status)
VALUES (?, ?, ?, ?, ?, ?, ?)
RETURNING id
`

type SaveEventParams struct {
	EventName      string    `db:"event_name"`
	DisciplineName string    `db:"discipline_name"`
	Phase          string    `db:"phase"`
	Gender         int64     `db:"gender"`
	StartAt        time.Time `db:"start_at"`
	EndAt          time.Time `db:"end_at"`
	Status         string    `db:"status"`
}

func (q *Queries) SaveEvent(ctx context.Context, arg SaveEventParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, SaveEvent,
		arg.EventName,
		arg.DisciplineName,
		arg.Phase,
		arg.Gender,
		arg.StartAt,
		arg.EndAt,
		arg.Status,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}
